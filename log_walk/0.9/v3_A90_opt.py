score = [0.4301, 0.5472, 0.7361, 0.7762, 0.7984, 0.8147, 0.8226, 0.8334, 0.8408, 0.8442, 0.8494, 0.8525, 0.8557, 0.8574, 0.8596, 0.8614, 0.861, 0.8625]
fscore = [0.4301, 0.8875, 0.8467, 0.8718, 0.8628, 0.8554, 0.886, 0.882, 0.8956, 0.8894, 0.8796, 0.8789, 0.8926, 0.9161, 0.9093, 0.8918, 0.8583, 0.8849]
cts = [1.1, 25.2, 29.0, 44.7, 45.0, 45.6, 46.4, 46.4, 45.3, 46.2, 44.8, 45.2, 44.3, 45.7, 46.0, 46.0, 47.1, 20.3]
tps = [5.1, 25.2, 29.0, 44.7, 45.0, 45.6, 46.4, 46.4, 45.3, 46.2, 44.8, 45.2, 44.3, 45.7, 46.0, 46.0, 47.1, 20.3]
tasks = [61, 21, 140, 93, 109, 169, 74, 148, 111, 70, 171, 134, 114, 42, 62, 91, 250, 124]
resolution = [0.2, 0.6524, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95]
ths = [0.0553, 0.0073, 0.0339, 0.0264, 0.03, 0.0285, 0.0268, 0.0277, 0.0257, 0.0259, 0.0271, 0.0247, 0.0229, 0.0229, 0.0247, 0.0245, 0.0237, 0.0217, 0.0165]
########################################################
interval = [1]
x1 = [0, 10, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 4]
x2 = [1, 10, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 4]
########################################################
f1_error = [0.3608875002494777, 0.4495389987121983, 0.07518833923098012, 0.015036783374845042, 0.0363546852772314, 0.013647429085608564, 0.0039404027955038945, 0.03244105715624457, 0.02234527939921027, 0.03676813573661919, 0.03402574028129668, 0.01676199145250057, 0.006534332556735856, 0.018931125433021667, 0.0479291045496395, 0.04071087957225494, 0.02195409285223693, 0.017845792517127923, 0.0005302663937933882]
f1_errorl = [0.4052, 0.2952, 0.2252, 0.1874, 0.1584, 0.1364, 0.1234, 0.1122, 0.1046, 0.0982, 0.0914, 0.0849, 0.0802, 0.078, 0.0757, 0.0725, 0.0695, 0.0659]
s_error = [0.003599999999999999, 0.15239999999999998, 0.019600000000000006, 0.0267, 0.017600000000000005, 0.0651, 0.07819999999999999, 0.0832, 0.038099999999999995, 0.063, 0.11439999999999999, 0.0821, 0.042899999999999994, 0.2535, 0.0912, 0.0116, 0.1427, 0.1582, 0.3646]
s_errorl = [0.0036, 0.078, 0.0585, 0.0506, 0.044, 0.0475, 0.0519, 0.0558, 0.0538, 0.0547, 0.0602, 0.062, 0.0605, 0.0743, 0.0754, 0.0714, 0.0756, 0.0802]
########################################################
feqs = [0.0164, 0.9524, 0.0857, 0.2151, 0.1835, 0.1183, 0.2703, 0.1351, 0.1802, 0.2857, 0.117, 0.1493, 0.1754, 0.4762, 0.3226, 0.2198, 0.08, 0.0645]
predicted_feqs = [0.02, 0.8, 0.1053, 0.1884, 0.1659, 0.1834, 0.1921, 0.2183, 0.2183, 0.2227, 0.2314, 0.2314, 0.2183, 0.2227, 0.2314, 0.2314, 0.2227, 0.2227, 0.3646]
########################################################


import matplotlib.pyplot as plt
import numpy as np

times = []
for i in range(len(tps)):
    times.append(np.sum(tps[:i]))

plt.plot(times, score, label="V = 5, w=50")
print(times)
#plt.plot(range(0, len(f1_error)), f1_error)

print("#############################################")
print("V = 5, w = 50", np.sum(tps), np.sum(tps)/60)
print(np.average(resolution), np.average(ths), np.average(feqs))
print(np.sum(x1), np.sum(x2))
print("f=", score[-1])


b = ((597-442)/442 + (514-345)/345 + (495-401)/401 + (404-337)/337)/4
b = ((1192-597)/597 + (718-514)/514 + (702-495)/495 + (562-404)/404)/4
print(b)

plt.legend()
plt.show()

a = [[442,345,401,337],[597,514, 495, 404],[1192,718, 702, 562]]

